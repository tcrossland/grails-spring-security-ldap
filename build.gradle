buildscript {
    ext {
        grailsVersion = project.grailsVersion
        springSecurityVersion = '3.2.7.RELEASE'//'3.2.3.RELEASE'
        grailsProjectWorkDir = 'target'
        grailsProjectDocsOutputDir = 'docs/manual' // for the gh-pages branch
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.4.0.RELEASE"
    id "com.jfrog.bintray" version "1.1"
}

version "2.0-GRAILS3-SNAPSHOT"
group "org.grails.plugins"

apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "spring-boot"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"
// Used for publishing to central repository, remove if not needed
apply from:'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/grailsCentralPublishing.gradle'
apply from:'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    provided 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile "org.grails:grails-plugin-testing"

    console "org.grails:grails-console"
    
    
    //-- Copied over build-configurations
    compile("org.springframework.security:spring-security-ldap:$springSecurityVersion") {
      exclude module:'apacheds-core'
      exclude module:'apacheds-core-entry'
      exclude module:'apacheds-protocol-ldap'
      exclude module:'apacheds-protocol-shared'
      exclude module:'apacheds-server-jndi'
      exclude module:'commons-logging'
      exclude module:'fest-assert'
      exclude module:'jcl-over-slf4j'
      exclude module:'junit'
      exclude module:'ldapsdk'
      exclude module:'logback-classic'
      exclude module:'mockito-core'
      exclude module:'shared-ldap'
      exclude module:'slf4j-api'
      exclude module:'spring-beans'
      exclude module:'spring-context'
      exclude module:'spring-core'
      exclude module:'spring-ldap-core'
      exclude module:'spring-security-core'
      exclude module:'spring-test'
      exclude module:'spring-tx'
    }
    compile('org.springframework.ldap:spring-ldap-core:2.0.3.RELEASE') {
      exclude module:'commons-lang'
      exclude module:'commons-logging'
      exclude module:'easymock'
      exclude module:'gsbase'
      exclude module:'junit'
      exclude module:'spring-beans'
      exclude module:'spring-core'
      exclude module:'spring-tx'
    }
    
  //plugins
  provided 'org.grails.plugins:hibernate'
  compile 'org.grails.plugins:grails-spring-security-core:2.4-GRAILS3-SNAPSHOT'
  /* build-plugins
    build ':release:3.0.1', ':rest-client-builder:2.0.3', {
      export = false
    }
  */
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

/* --BuildConfig.groovy copied-over-configurations--
 
grails.project.work.dir = 'target'
grails.project.docs.output.dir = 'docs/manual' // for the gh-pages branch

grails.project.dependency.resolver = "maven"
grails.project.dependency.resolution = {

  inherits 'global'
  log 'warn'

  repositories {
    grailsCentral()
    mavenLocal()
    mavenCentral()

    mavenRepo 'http://repo.spring.io/milestone' // TODO remove
  }

  dependencies {
    String springSecurityVersion = '3.2.7.RELEASE'

    compile "org.springframework.security:spring-security-ldap:$springSecurityVersion", {
      excludes 'apacheds-core', 'apacheds-core-entry', 'apacheds-protocol-ldap', 'apacheds-protocol-shared',
               'apacheds-server-jndi', 'commons-logging', 'fest-assert', 'jcl-over-slf4j', 'junit', 'ldapsdk',
               'logback-classic', 'mockito-core', 'shared-ldap', 'slf4j-api', 'spring-beans', 'spring-context',
               'spring-core', 'spring-ldap-core', 'spring-security-core', 'spring-test', 'spring-tx'
    }
    runtime('org.springframework.ldap:spring-ldap-core:2.0.3.RELEASE') {
      excludes 'commons-lang', 'commons-logging', 'easymock', 'gsbase', 'junit', 'spring-beans', 'spring-core', 'spring-tx'
    }
  }

  plugins {
    compile ':spring-security-core:2.0-SNAPSHOT'

    compile(":hibernate:3.6.10.17") {
      export = false
    }

    build ':release:3.0.1', ':rest-client-builder:2.0.3', {
      export = false
    }
  }
}
 */
/* TODO create gradle-tasks to replace previous ant-tasks
  <project name='spring-security-ldap' default='package'>

  <!-- Properties -->

  <property file='application.properties' />

  <property environment='env'/>

  <!-- optional properties file for developer overrides -->
  <property file='build.properties' />

  <property name='grails.home' value='${env.GRAILS_HOME}' />

  <condition property='grails' value='grails.bat'>
    <os family='windows'/>
  </condition>
  <property name='grails' value='grails' />

  <!-- Macrodefs -->

  <macrodef name='grails'>
    <attribute name='action' />
    <attribute name='environment' default='dev' />
    <element name='args' optional='true' />
    <sequential>
      <exec executable='${grails}' failonerror='true'>
        <args />
        <arg value='@{environment}'/>
        <arg value='@{action}'/>
      </exec>
    </sequential>
  </macrodef>

  <!-- Targets -->

  <target name='init'>
    <mkdir dir='grails-app/conf/spring'/>
  </target>

  <target name='clean' description='Cleans a Grails application' depends='init'>
    <grails action='clean' />
    <delete><fileset dir='.' includes='*.log*' /></delete>
  </target>

  <target name='test' description='Run unit tests' depends='clean'>
    <grails action='test-app' environment='test' />
  </target>

  <target name='package' description='Package the plugin'
          depends='test, doPackage, post-package-cleanup'/>

  <target name='doPackage'>
    <grails action='package-plugin' />
  </target>

  <target name='post-package-cleanup'>
    <delete dir='grails-app/conf/hibernate'/>
    <delete dir='grails-app/conf/spring'/>
    <delete dir='grails-app/controllers'/>
    <delete dir='grails-app/domain'/>
    <delete dir='grails-app/i18n'/>
    <delete dir='grails-app/services'/>
    <delete dir='grails-app/taglib'/>
    <delete dir='grails-app/utils'/>
    <delete dir='grails-app/views'/>
    <delete dir='lib'/>
    <delete dir='src/groovy'/>
    <delete dir='test/integration'/>
    <delete dir='web-app'/>
  </target>

</project>

 */